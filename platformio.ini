; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common_env_data]
activate_spiram_buildflags =
	-D CONFIG_SPIRAM_CACHE_WORKAROUND
	-mfix-esp32-psram-cache-issue
	-D CONFIG_SPIRAM_SUPPORT=1
	-D CONFIG_SPIRAM_BOOT_INIT
	-D CONFIG_SPIRAM_TYPE_AUTO=1
	-D CONFIG_SPIRAM_SIZE=-1
	-D CONFIG_SPIRAM_SPEED_40M
	-D CONFIG_SPIRAM_MEMTEST=1
	-D CONFIG_SPIRAM_MALLOC_RESERVE_INTERNAL=32768
	-D CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL=16384
	-D CONFIG_SPIRAM_USE_MALLOC=1
	-D CONFIG_SUPPORT_STATIC_ALLOCATION=1
	-D CONFIG_PICO_PSRAM_CS_IO=10
	-D CONFIG_SPIRAM_OCCUPY_VSPI_HOST

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = espidf
; setup build flags. 
; include the MP3 file
; include all include/ folders from all needed libs
; add the lib/ folder of the needed libraries to the search path
; select LYRATD_MSC_V2_2 as the board configuration (for GPIO pins)

build_flags =
	-D CONFIG_ESP_LYRATD_MSC_V2_2_BOARD
	-D COMPONENT_EMBED_TXTFILES=adf_music.mp3
	${common_env_data.activate_spiram_buildflags}
	; these include paths HAVE to be here and cannot be included in the library.json
	; because the source needs
	-I lib/esp_http_client/include
	-I lib/esp_http_client/lib/include

; un-include the ESP-IDFs native esp_http_client library
; actually we should just use an older ESP-IDF version, but then the 
; include for the binary file breaks.. 
; lib was added to ESP-IDF with https://github.com/espressif/esp-idf/commit/ff528d13c7a24f3b5cb7937a41f6e1d8a921a99c#diff-c7c711c57aa3482655dd39165cf29087
; ESP-ADF fixes ESP-IDF at the 3.0 release.
; but with this, we can built ESP-ADF with the latest stable ESP-IDF! :)
; UPDATE: Even with the newest ESP-IDF version we still need this lib because esp_http_client_set_redirection()
; is only found in the ESP-ADF version but in the ESP-IDF's version..

; this should have actually worked, but it doesn't...
;build_unflags = -I"$PIOHOME_DIR/packages/framework-espidf/components/esp_http_client/include"

; CHANGE THIS PATH TO THE PLATFORMIO HOME DIRECTORY. 
; On Windows: Only change username. (C:\Users\<user>\.platformio)
; On Linux / Mac standard: /home/<user>/.platformio
build_unflags = -I"C:/Users/Maxi/.platformio/packages/framework-espidf/components/esp_http_client/include"

; execute script which fixes multiple compilation errors which ESP-ADF is too lazy to fix right now.
extra_scripts = compilation_fixer.py

; dependencies for this app
lib_deps = 
	audio_pipeline
	audio_hal
	audio_sal
	audio_stream
	esp_codec
	esp_http_client
	esp_peripherals